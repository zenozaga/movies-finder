import { EpisodeType, SerieType } from "../types";
import { CastType, Network } from "./cast";
import { CategoryType } from "./category";
import { SourceType } from "./source";
export interface MovieType {
    id: string;
    link: string;
    title: string;
    subtitle: string;
    description: string;
    duration: string;
    type: string;
    rating: string;
    released: string;
    year?: string;
    poster: string;
    background: string;
    trailers: string[];
    genders: CategoryType[];
    sources: SourceType[];
    cast: CastType[];
    imdbID?: string;
    tmdbID?: string;
    relates?: Array<MovieType | SerieType | EpisodeType>;
    fetcher: string;
    networks?: Network[];
}
declare class Movie implements MovieType {
    id: string;
    link: string;
    title: string;
    subtitle: string;
    description: string;
    duration: string;
    type: string;
    rating: string;
    released: string;
    year?: string | undefined;
    poster: string;
    background: string;
    trailers: string[];
    genders: CategoryType[];
    sources: SourceType[];
    cast: CastType[];
    imdbID?: string | undefined;
    tmdbID?: string | undefined;
    relates?: Array<MovieType | SerieType | EpisodeType>;
    fetcher: string;
    networks?: Network[] | undefined;
    constructor(id: string, link: string, title: string, subtitle: string, description: string, duration: string, type: string, rating: string, released: string, year: string, poster: string, background: string, trailers: string[], sources: SourceType[], imdbID: string, tmdbID: string, fetcher: string, cast: CastType[], genders: CategoryType[], relates?: Array<MovieType | SerieType | EpisodeType>, networks?: Network[]);
    static fromObject(obj: MovieType): Movie;
    toObject(): {
        id: string;
        title: string;
        subtitle: string;
        description: string;
        duration: string;
        type: string;
        rating: string;
        released: string;
        year: string | undefined;
        poster: string;
        background: string;
        trailers: string[];
        sources: SourceType[];
        imdbID: string | undefined;
        tmdbID: string | undefined;
        fetcher: string;
        cast: CastType[];
        genders: CategoryType[];
        relates: (MovieType | SerieType | EpisodeType)[];
        networks: Network[];
    };
    toString(): string;
}
export default Movie;
